:root {
  --button-hover-mix: 80%;
}

:host {
  display: inline-flex;
}

/* block attribute is used to make the button take full width */

:host([block]) {
  display: block;
  width: 100%;
}

:host([block]) button {
  width: 100%;
}

/* inner button  */

:host button {
  -webkit-appearance: none;
  appearance: none;
  outline: none;
  border: 1px solid transparent;
  border-radius: var(--ui-button-radius, var(--radius));
  outline: none;
  cursor: pointer;
  font-weight: 500;
  line-height: 1;
  white-space: no-wrap;
  transition: all 0.15s ease;
  font-size: var(--ui-button-font-size, 0.875rem);
  padding: var(--ui-button-padding, 0.5rem 1rem);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--ui-button-gap, 0.5rem);
  flex-direction: var(--ui-button-direction, row);
  flex-shrink: 0;
}
:host button:focus-visible {
  box-shadow: var(--focus-ring);
}

:host([aria-invalid]) button {
  border-color: var(--destructive);
  box-shadow: 0 0 0 1px oklch(from var(--destructive) l calc(c / 20) h);
}

:host-context(.dark) :host([aria-invalid]) button {
  box-shadow: 0 0 0 1px oklch(from var(--destructive) l calc(c / 40) h);
}

:host([aria-invalid]) button:focus-visible {
  box-shadow:
    var(--focus-ring),
    0 0 0 1px var(--destructive);
}

/* Named slot layout */
:host button ::slotted([slot='label']) {
  display: inline-flex;
  align-items: center;
}

/* Icon sizing for named slots using ui-icon */
:host button ::slotted([slot='prefix']),
:host button ::slotted([slot='suffix']) {
  display: inline-flex;
  flex-shrink: 0;
  width: var(--ui-button-icon-size, 1rem);
  height: var(--ui-button-icon-size, 1rem);
}

/* Loading state: hide normal content, show spinner slot */
:host([loading]) button ::slotted([slot='prefix']),
:host([loading]) button ::slotted([slot='label']),
:host([loading]) button ::slotted([slot='suffix']) {
  visibility: hidden;
  opacity: 0;
}

:host button ::slotted([slot='spinner']) {
  display: none;
}

:host([loading]) button ::slotted([slot='spinner']) {
  display: inline-flex;
  width: var(--ui-button-icon-size, 1rem);
  height: var(--ui-button-icon-size, 1rem);
}

/* Variants */
:host([variant='default']) button {
  background: var(--primary);
  color: var(--primary-foreground);
  border-color: transparent;
}

:host([variant='default']:hover) button {
  background: oklch(from var(--primary) calc(l + 0.2) c h);
  color: var(--primary-foreground);
}

:host([variant='secondary']) button {
  background: var(--secondary);
  color: var(--secondary-foreground);
  border-color: var(--input);
}

:host([variant='secondary']:hover) button {
  background: oklch(from var(--secondary) calc(l + 0.2) c h);
  color: var(--secondary-foreground);
}

:host([variant='destructive']) button {
  background: var(--destructive);
  color: var(--destructive-foreground);
  border-color: transparent;
}

:host([variant='destructive']:hover) button {
  background: oklch(from var(--destructive) calc(l + 0.2) c h);
  color: var(--destructive-foreground);
}

:host([variant='outline']) button {
  background: transparent;
  color: var(--foreground);
  border-color: var(--input);
}

:host([variant='outline']:hover) button {
  background: oklch(from var(--accent) calc(l + 0.2) c h);
  color: var(--accent-foreground);
}

:host([variant='ghost']) button {
  background: transparent;
  border-color: transparent;
  color: var(--foreground);
}

:host([variant='ghost']:hover) button {
  background: oklch(from var(--accent) calc(l + 0.2) c h);
  color: var(--accent-foreground);
}

:host([variant='link']) button {
  background: transparent;
  color: var(--primary);
  border-color: transparent;
  text-decoration: underline;
  text-underline-offset: 2px;
}

/* Sizes */
:host([size='default']) button {
  height: var(--ui-button-height, 2.5rem);
}

:host([size='sm']) button {
  height: var(--ui-button-height, 2.25rem);
  border-radius: var(--ui-button-radius, calc(var(--radius) - 2px));
}

:host([size='lg']) button {
  height: var(--ui-button-height, 2.75rem);
  font-size: var(--ui-button-font-size, 1rem);
}

:host([size='icon']) button {
  height: var(--ui-button-icon-box, 2.25rem);
  width: var(--ui-button-icon-box, 2.25rem);
  padding: 0;
  display: inline-grid;
  place-items: center;
  border-radius: 100%;
}

/* Disabled */
:host([disabled]) button,
:host button:disabled {
  opacity: 0.5;
  pointer-events: none;
  cursor: not-allowed;
}

/* Force consistent disabled visuals across all variants and states */
/* Use [disabled][variant] to raise specificity above variant :hover selectors */
:host([disabled][variant]) button,
:host([disabled][variant]) button:hover,
:host([disabled][variant]) button:focus,
:host([disabled][variant]) button:focus-visible {
  background: var(--muted);
  color: var(--muted-foreground);
  border-color: var(--input);
}
